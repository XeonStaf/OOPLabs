@page "/task-edit/{id}"
@using Microsoft.AspNetCore.Components
@inject NavigationManager _navigationManager
@inject HttpClient Http

<h1>Edit Task </h1>
<hr/>
<h4>You can change Status, Content, Assigned employee for task<br>#@id <br/>with a form bellow</h4>

@if (_employes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <EditForm Model="@_task" OnSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            <p>Select Status:</p>
            <InputSelect @bind-Value="_task.State">
                @foreach (var state in Enum.GetValues(typeof(AddTask.TaskState)))
                {
                    <option value="@state">@state</option>
                }
            </InputSelect>
            <p>Content:</p>
            <InputText class="form-control" @bind-Value="_task.Content"/>
            <p>Employee ID:</p>
            <InputSelect @bind-Value="@_employeeId">
                @foreach (var employee in _employes)
                {
                    <option value="@employee.Id">@employee.Name</option>
                }
            </InputSelect>
            <br/>
            <!-- <input class="form-control" @bind="_task.AssignedEmployee"/> -->
            <button type="submit">Update</button>
        </div>
    </EditForm>
}


@code {
    private AddTask.TaskModel _task = new();
    private EmployeesList.Employee[] _employes;
    private Guid _employeeId = new();
    [Parameter]  
    public string id { get; set; }
    
    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync($"https://localhost:5003/task/update?id={@id}&newState={_task.State}&newEmployee={_employeeId}&newContent={_task.Content}", _task);
        _navigationManager.NavigateTo("/all-task", true);
    }
    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:5003/employee/all");

        var httpResponse = await Http.SendAsync(request);
        _employes = await httpResponse.Content.ReadFromJsonAsync<EmployeesList.Employee[]>();
    }

}